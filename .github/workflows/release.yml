name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  test:
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: ubuntu-24.04-arm
            platform: linux
            arch: arm64
          - os: macos-13
            platform: macos
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64
          - os: windows-11-arm
            platform: windows
            arch: arm64
    runs-on: ${{ matrix.os }}
    name: "Test: ${{ matrix.platform }}-${{ matrix.arch }}"
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      - uses: pypa/hatch@install
      - run: hatch test

  build-binaries:
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: ubuntu-24.04-arm
            platform: linux
            arch: arm64
          - os: macos-13
            platform: macos
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64
          - os: windows-11-arm
            platform: windows
            arch: arm64
    runs-on: ${{ matrix.os }}
    name: Build binary for ${{ matrix.platform }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install .
      - name: Build binary
        run: |
          pyinstaller --onefile --name dotbot src/dotbot/cli.py
      - name: Package binary
        shell: bash
        run: |
          if [[ "${{ matrix.platform }}" == "windows" ]]; then
            cd dist && powershell Compress-Archive -Path dotbot.exe -DestinationPath dotbot-${{ matrix.platform }}-${{ matrix.arch }}.zip
          else
            cd dist && tar -czf dotbot-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz dotbot
          fi
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: dotbot-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/dotbot-${{ matrix.platform }}-${{ matrix.arch }}.*

  github-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    name: Create GitHub Release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/dotbot-*
          generate_release_notes: true
